# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: src/proto/neopixel.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import src.proto.neopixel_pb2


class NeopixelServiceBase(abc.ABC):

    @abc.abstractmethod
    async def SetPixelColor(self, stream: 'grpclib.server.Stream[src.proto.neopixel_pb2.SetPixelColorRequest, src.proto.neopixel_pb2.SetPixelColorResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Show(self, stream: 'grpclib.server.Stream[src.proto.neopixel_pb2.ShowRequest, src.proto.neopixel_pb2.ShowResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/viam.components.neopixel.v1.NeopixelService/SetPixelColor': grpclib.const.Handler(
                self.SetPixelColor,
                grpclib.const.Cardinality.UNARY_UNARY,
                src.proto.neopixel_pb2.SetPixelColorRequest,
                src.proto.neopixel_pb2.SetPixelColorResponse,
            ),
            '/viam.components.neopixel.v1.NeopixelService/Show': grpclib.const.Handler(
                self.Show,
                grpclib.const.Cardinality.UNARY_UNARY,
                src.proto.neopixel_pb2.ShowRequest,
                src.proto.neopixel_pb2.ShowResponse,
            ),
        }


class NeopixelServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SetPixelColor = grpclib.client.UnaryUnaryMethod(
            channel,
            '/viam.components.neopixel.v1.NeopixelService/SetPixelColor',
            src.proto.neopixel_pb2.SetPixelColorRequest,
            src.proto.neopixel_pb2.SetPixelColorResponse,
        )
        self.Show = grpclib.client.UnaryUnaryMethod(
            channel,
            '/viam.components.neopixel.v1.NeopixelService/Show',
            src.proto.neopixel_pb2.ShowRequest,
            src.proto.neopixel_pb2.ShowResponse,
        )
